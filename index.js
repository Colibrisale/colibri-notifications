app.post("/api/notifications/send", async (req, res) => {
    try {
        const { customerId, title, message } = req.body;
        if (!customerId || !title || !message) {
            return res.status(400).json({ success: false, error: "customerId, title –∏ message –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!" });
        }

        console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", req.body);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Shopify API
        const response = await axios.post(
            `https://${process.env.SHOPIFY_STORE_URL}/admin/api/2023-10/customers/${customerId}/tags.json`,
            {
                tags: title
            },
            {
                headers: {
                    "X-Shopify-Access-Token": process.env.SHOPIFY_ACCESS_TOKEN,
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                }
            }
        );

        console.log("üì© –û—Ç–≤–µ—Ç –æ—Ç Shopify:", response.data);

        res.json({ success: true, message: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Shopify!" });

    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", error.response ? error.response.data : error.message);
        res.status(500).json({ success: false, error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Shopify" });
    }
});
